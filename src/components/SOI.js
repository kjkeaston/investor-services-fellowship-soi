import React, { Component } from 'react';

class SOI extends Component {
  constructor() {
    super()
    this.state = {
      timestamp: new Date(),
      allInvestments: [],
      allDates: [],
      name: '',
      assetClass: '',
      investmentDate: 'All Dates',
      quantity: '',
      cost: '',
      searchClicked: false,
      tableDisplay: 'visible',
    }

    this.dateSelected = this.dateSelected.bind(this);
    this.dateSearch = this.dateSearch.bind(this);
  }

  componentDidMount() {
    fetch('https://gist.githubusercontent.com/cranium/d8b83184bf0750f2c834760b7c9203dc/raw/a73a70716951f77b90e84b8848ff1fee46938dd1?date=2014-08-01/soi.json').then( (res) => {
      return res.json();
    }).then( (data) => {
      console.log('all investments>>>', data)
      this.setState({
        allInvestments: this.state.allInvestments.concat(data),
      })
      this.state.allInvestments.map((eachInvestment) => {
        eachInvestment.issued_assets.map((eachAsset) => {
          this.setState({
            allDates: this.state.allDates.concat(eachAsset.investment_date)
          })
          // order the dates in the dropdown list
          this.setState({
            allDates: this.state.allDates.sort((a, b) => {
              let nameA = new Date(a);
              let nameB = new Date(b);
              if (nameA < nameB) {
                return -1;
              }
              if (nameA > nameB) {
                return 1;
              }
                return 0;
              }
            )
          })
        })
      });
    })
  }

  // set state of selected date from dropdown and hide table
  dateSelected(e) {
    this.setState({investmentDate: e.target.value})
    this.setState({tableDisplay: 'hidden'})
  }

  dateSearch(e) {
    e.preventDefault();
    console.log(this.state.investmentDate)
    if(this.state.investmentDate === 'All Dates') {
      this.setState({
        searchClicked:false,
        tableDisplay: 'visible'
      })
    } else {
      this.state.allInvestments.map((eachInvestment) => {
        eachInvestment.issued_assets.map((eachAsset) => {
          if(eachAsset.investment_date === this.state.investmentDate) {
            this.setState({
              tableDisplay: 'visible',
              timestamp: new Date(),
              searchClicked: true,
              name: eachInvestment.name,
              assetClass: eachAsset.asset_class,
              investmentDate: eachAsset.investment_date,
              quantity: eachAsset.quantity,
              cost: eachAsset.cost.$,
            })
          }
        })
      })
    }
  }

  render() {

    let tableDisplay = {
    visibility: this.state.tableDisplay
    }

    return(
      <div className="container">
        <div className="row padding-top">
          <div className="col-6 text-center">
            <h1>Hi there, {this.props.passedFirstName}!</h1>
          </div>
          <div className="col-6">
            <h3>Select an investment date below <br /> and click 'Search'</h3>
            <form onSubmit={this.dateSearch}>
              <div className="form-group">
                <label htmlFor="select-date">Select a date</label>
                <select
                  className="form-control"
                  id="select-date"
                  onChange={this.dateSelected}>
                    <option disabled>Select a date...</option>
                    <option defaultValue>All Dates</option>
                    {this.state.allDates.map((eachDate) => {
                      return (<option value={eachDate} key={eachDate}>{eachDate}</option>)
                    })
                  }
                </select>
                <button className="btn btn-info date-search-btn" type="submit">Search</button>
              </div>
            </form>
          </div>
        </div>
        <div className="row padding-top">
          <div className="col-12">
            <h3>Krakatoa Ventures Fund I, L.P.</h3>
            <p><strong>As of {this.state.timestamp.toLocaleDateString()} â€¢ Generated by {this.props.passedFirstName} {this.props.passedLastName} ({this.props.passedLastName}@esharesinc.com) at {this.state.timestamp.toLocaleString()}</strong></p>
          </div>
        </div>
        <div style={tableDisplay}>
          {this.state.investmentDate === 'All Dates' && !this.state.searchClicked ? (
            <table className="table table-borderless">
              <thead data-toggle="collapse" data-target="#whole-table" className="table-header">
                <tr className="table-primary">
                  <th scope="col">Investment</th>
                  <th scope="col">Asset</th>
                  <th scope="col">Investment Date</th>
                  <th scope="col">Shares</th>
                  <th scope="col">Cost</th>
                </tr>
              </thead>
              {this.state.allInvestments.map((eachInvestment) => {
                return (
                  <tbody key={eachInvestment.name} id="whole-table" className="collapse-in">
                  <tr className="table-secondary">
                    <td 
                      className="btn btn-secondary"
                      id="investment-name-btn"
                      data-toggle="collapse" 
                      data-target={`#${eachInvestment.name}`}>
                      {eachInvestment.name}
                    </td>
                    <td></td>
                    <td></td>
                    <td>{eachInvestment.quantity.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")}</td>
                    <td>${eachInvestment.cost.$.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")}</td>
                  </tr>
                    {eachInvestment.issued_assets.map((eachAsset) => {
                      return(
                        <tr key={eachAsset.asset_class} 
                          id={eachInvestment.name}>
                          <td></td>
                          <td>{eachAsset.asset_class}</td>
                          <td>{eachAsset.investment_date}</td>
                          {eachAsset.quantity !== null ? (
                          <td>{eachAsset.quantity.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")}</td>
                          ):(<td>{eachAsset.quantity}</td>)}
                          <td>${eachAsset.cost.$.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")}</td>
                        </tr>
                      )
                  })}
                  </tbody>
                )
              })}
            </table>):(
            <table className="table table-borderless">
            <thead data-toggle="collapse" data-target="#whole-table" className="table-header">
              <tr className="table-primary">
                <th scope="col">Investment</th>
                <th scope="col">Asset</th>
                <th scope="col">Investment Date</th>
                <th scope="col">Shares</th>
                <th scope="col">Cost</th>
              </tr>
            </thead>
            <tbody id="whole-table" className="collapse-in">
              <tr className="table-secondary">
                <td
                  id="investment-name-btn"
                  className="btn btn-secondary"
                  data-toggle="collapse" 
                  data-target={`#${this.state.name}`}>
                  {this.state.name}
                </td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
              </tr>
              <tr id={this.state.name}>
                <td></td>
                <td>{this.state.assetClass}</td>
                <td>{this.state.investmentDate}</td>
                {this.state.quantity !== null ? (
                  <td>{this.state.quantity.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")}</td>
                  ):(
                  <td>{this.state.quantity}</td>)}
                <td>${this.state.cost.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")}</td>
              </tr>
            </tbody>
          </table>)}
        </div>
      </div>
    )
  }
}

export default SOI;
